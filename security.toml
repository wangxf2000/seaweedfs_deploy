[jwt.signing]
key = "111"
expires_after_seconds = 300           # seconds

# jwt for read is only supported with master+volume setup. Filer does not support this mode.
[jwt.signing.read]
key = "222"
expires_after_seconds = 360           # seconds

# all grpc tls authentications are mutual
# the values for the following ca, cert, and key are paths to the PERM files.
# the host name is not checked, so the PERM files can be shared.
[grpc]
ca = "/usr/local/certstrap/out/SeaweedFS_CA.crt"
# Set wildcard domain for enable TLS authentication by common names
allowed_wildcard_domain = "" # .mycompany.com

[grpc.volume]
cert ="/usr/local/certstrap/out/volume01.crt"
key  ="/usr/local/certstrap/out/volume01.key"
allowed_commonNames = ""        # comma-separated SSL certificate common names

[grpc.master]
cert ="/usr/local/certstrap/out/master01.crt"
key  ="/usr/local/certstrap/out/master01.key"
allowed_commonNames = ""        # comma-separated SSL certificate common names

[grpc.filer]
cert ="/usr/local/certstrap/out/filer01.crt"
key  ="/usr/local/certstrap/out/filer01.key"
allowed_commonNames = ""        # comma-separated SSL certificate common names

[grpc.msg_broker]
cert = ""
key  = ""
allowed_commonNames = ""        # comma-separated SSL certificate common names

# use this for any place needs a grpc client
# i.e., "weed backup|benchmark|filer.copy|filer.replicate|mount|s3|upload"
[grpc.client]
cert ="/usr/local/certstrap/out/client01.crt"
key  ="/usr/local/certstrap/out/client01.key"

# volume server https options
# Note: work in progress!
#     this does not work with other clients, e.g., "weed filer|mount" etc, yet.
[https.client]
enabled = true
[https.volume]
cert = ""
key  = ""
